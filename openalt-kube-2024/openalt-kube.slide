# Co je to ten Kubernetes?

Stanislav L√°zniƒçka
Principal Software Engineer at Microsoft
slznika@microsoft.com
https://github.com/stlaz
https://www.linkedin.com/in/slaznicka/
stlaz on k8s Slack

## Tak≈æe co to je?

- IaaS, PaaS? CaaS!
    - ü§ï
- "an open source system for automating deployment, scaling, and management of containerized applications" (kubernetes.io)
- Open Source \o/
    - pravideln√© nahr√°van√© meetingy dev skupin (SIGs)

## Kontejnery üöÆ

- "Takov√° virtu√°lka. A≈æ na to, ≈æe v≈Øbec."
- izolovan√° aplikace se v≈°√≠m v≈°udy
- izolace = Linux kernel namespaces
```
$ man 7 namespaces
       Namespace Flag            Page                  Isolates
       Cgroup    CLONE_NEWCGROUP cgroup_namespaces(7)  Cgroup root directory
       IPC       CLONE_NEWIPC    ipc_namespaces(7)     System V IPC, POSIX message queues
       Network   CLONE_NEWNET    network_namespaces(7) Network devices, stacks, ports, etc.
       Mount     CLONE_NEWNS     mount_namespaces(7)   Mount points
       PID       CLONE_NEWPID    pid_namespaces(7)     Process IDs
       Time      CLONE_NEWTIME   time_namespaces(7)    Boot and monotonic clocks
       User      CLONE_NEWUSER   user_namespaces(7)    User and group IDs
       UTS       CLONE_NEWUTS    uts_namespaces(7)     Hostname and NIS domain name
```
- [running a container without docker](https://medium.com/@alexander.murylev/run-your-own-container-without-docker-60c297faf010)

## Kubernetes jako orchestr√°tor kontejner≈Ø

- kontejner = aplikace
- orchestrace
    - automatizovan√© nasazov√°n√≠, konfigurace a spr√°va
- deklarativn√≠ REST API
- CLI - `kubectl`

## No, dob≈ôe, ale...

- secure by default
- automatick√Ω loadbalancing (`Service` objekty)
- replikace, autoscaling
- kontrola ≈æivosti aplikace
- metriky na v≈°e mo≈æn√© i nemo≈æn√©
- obrovsk√Ω ekosyst√©m

## M√°te architekturu? A mohla bych ji vidƒõt?

.image ./components-of-kubernetes.svg _ 1000
.caption source: https://kubernetes.io/docs/concepts/overview/components/

## API

- metadata - typ, sou≈ôadnice, popisky
- namespaces - izolace mezi u≈æivateli
- snadno roz≈°i≈ôiteln√©
    - CRD + CEL
    - agregaƒçn√≠ API vrstva

.code -numbers ./pod.yaml /START OMIT/,/END OMIT/

## Pod

- nejmen≈°√≠ prvek pro nasazen√≠ aplikace
- jeden i v√≠ce kontejner≈Ø
    - init
    - normal
    - ephemeral
- design pattern - sidecar container

## Pod lifecycle

- ≈æivotn√≠ cyklus podu:
    - Pending
        - pod vytvo≈ôen√Ω, ƒçek√° na scheduling, volumes, a sta≈æen√≠ image
    - Running
        - pod je napojen√Ω na node at least a alespo≈à jeden kontejner st√°le bƒõ≈æ√≠ nebo startuje
    - Succeeded/Failed
        - v≈°echny kontejnery skonƒçily
    - Unknown
        - stav podu se nepoda≈ôilo zjistit
- pod nep≈ôe≈æije eviction nebo selh√°n√≠ node

## Deployment

.code ./deployment.yaml /kind:/,/image:/

## Deployment - funkce jednotliv√Ωch komponent

.image ./components-of-kubernetes.svg _ 1000
.caption source: https://kubernetes.io/docs/concepts/overview/components/

## Microsoft m√° office v Brnƒõ

.image ./pozice.png
